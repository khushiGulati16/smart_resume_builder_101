<!DOCTYPE html>
<html>
<head>
  <title>My Dashboard</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    :root {
      --bg-gradient: linear-gradient(135deg, #0f172a, #1e293b);
      --text-light: #f1f5f9;
      --muted: #cbd5e1;
      --accent: #6366f1;
      --accent-glow: #8b5cf6;
      --card-bg: rgba(30, 41, 59, 0.8);
      --shadow: 0 10px 25px rgba(0,0,0,0.6);
      --radius: 16px;
      --font: 'Poppins', 'Segoe UI', sans-serif;
    }

    body.dashboard-page {
      font-family: var(--font);
      background: var(--bg-gradient);
      color: var(--text-light);
      padding-top: 80px;
      margin: 0;
    }

    /* Navbar */
    .navbar {
      position: fixed;
      top: 0;
      width: 100%;
      padding: 1rem 4rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: rgba(15, 23, 42, 0.85);
      backdrop-filter: blur(12px);
      border-bottom: 1px solid rgba(255,255,255,0.05);
      box-shadow: var(--shadow);
      z-index: 1000;
    }
    .navbar .logo {
      font-size: 1.6rem;
      font-weight: 700;
      color: var(--accent);
      text-decoration: none;
    }
    .navbar nav a {
      margin-left: 2rem;
      font-weight: 500;
      text-decoration: none;
      color: var(--text-light);
      position: relative;
      transition: color 0.3s ease;
    }
    .navbar nav a:hover { color: var(--accent); }
    .navbar nav a::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: -4px;
      width: 0;
      height: 2px;
      background: var(--accent);
      transition: width 0.3s ease;
    }
    .navbar nav a:hover::after { width: 100%; }

    /* Dashboard Header */
    .dashboard-container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 0 2rem;
    }
    .dashboard-header {
      text-align: center;
      margin-bottom: 2rem;
    }
    .dashboard-header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      background: linear-gradient(90deg, var(--accent), var(--accent-glow));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    .dashboard-header p { font-size: 1.1rem; color: var(--muted); }

    /* Stats */
    .stats {
      display: flex;
      gap: 20px;
      justify-content: center;
      margin: 2rem 0;
      flex-wrap: wrap;
    }
    .stat-box {
      background: var(--card-bg);
      padding: 1.5rem 2rem;
      border-radius: var(--radius);
      text-align: center;
      box-shadow: var(--shadow);
      transition: transform 0.3s ease;
      min-width: 150px;
    }
    .stat-box:hover { transform: translateY(-5px); }
    .stat-box h2 { font-size: 2rem; margin-bottom: 5px; color: #f8fafc; }
    .stat-box p { font-size: 0.9rem; color: var(--muted); }

    /* Buttons */
    .btn {
      display: inline-block;
      border-radius: 50px;
      font-weight: 600;
      text-decoration: none;
      transition: transform 0.3s, box-shadow 0.3s;
    }
    .btn-primary {
      background: linear-gradient(45deg, var(--accent), var(--accent-glow));
      color: #fff;
      padding: 12px 25px;
      box-shadow: 0 5px 20px rgba(99,102,241,0.5);
    }
    .btn-primary:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 30px rgba(139,92,246,0.6);
    }

    /* Resume Cards */
    .resumes-container {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 20px;
      margin-top: 30px;
    }
    .resume-card {
      background: var(--card-bg);
      color: #f8fafc;
      padding: 20px;
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      width: 280px;
      text-align: left;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .resume-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 15px 35px rgba(0,0,0,0.6);
    }
    .resume-card h2 { margin: 0 0 10px; color: #f8fafc; }
    .resume-card p { font-size: 0.9rem; color: var(--muted); }
    .card-actions {
      display: flex;
      justify-content: space-between;
      gap: 10px;
      margin-top: 10px;
    }
    .btn-view { background: #22c55e; color: #fff; padding: 8px 15px; border-radius: 6px; font-size: 0.9rem; text-decoration: none; flex: 1; text-align: center; }
    .btn-download { background: #3b82f6; color: #fff; padding: 8px 15px; border-radius: 6px; font-size: 0.9rem; text-decoration: none; flex: 1; text-align: center; }
    .btn-delete { background: #ef4444; color: #fff; padding: 8px 15px; border-radius: 6px; font-size: 0.9rem; border: none; cursor: pointer; flex: 1; text-align: center; }

    /* Empty State */
    .empty-state {
      text-align: center;
      margin: 40px 0;
      padding: 40px 20px;
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
    }
    .empty-state p { font-size: 1.2rem; color: var(--muted); margin-bottom: 15px; }

    /* Footer */
    .footer {
      text-align: center;
      padding: 2rem;
      background: rgba(15,23,42,0.85);
      border-top: 1px solid rgba(255,255,255,0.05);
      margin-top: 3rem;
      font-size: 0.95rem;
      color: var(--muted);
    }
  </style>
</head>
<body class="dashboard-page">
  <header class="navbar">
    <a href="/" class="logo">SmartResume</a>
    <nav>
      <% if (user) { %>
        <a href="/">Home</a>
        <a href="/resume/create">Create New</a>
        <a href="/dashboard">My Resumes</a>
        <a href="/auth/logout">Logout</a>
      <% } else { %>
        <a href="/auth/login">Login</a>
        <a href="/auth/signup">Sign Up</a>
      <% } %>
    </nav>
  </header>

  <div class="dashboard-container">
    <div class="dashboard-header">
      <h1>Welcome, <%= user.name || user.email %> ðŸ‘‹</h1>
      <p>Manage your resumes, track progress, and create new ones easily.</p>
    </div>

    <div class="stats">
      <div class="stat-box">
        <h2><%= resumes.length %></h2>
        <p>Total Resumes</p>
      </div>
      <div class="stat-box">
        <h2>0</h2>
        <p>Downloads</p>
      </div>
      <div class="stat-box">
        <h2>0</h2>
        <p>Templates Used</p>
      </div>
    </div>

    <div class="actions" style="text-align: center; margin: 20px 0;">
      <a href="/resume/create" class="btn btn-primary">âž• Create New Resume</a>
    </div>

    <% if (resumes.length > 0) { %>
      <div class="resumes-container">
        <% resumes.forEach(resume => { %>
          <div class="resume-card" data-id="<%= resume._id %>">
            <h2><%= resume.name %></h2>
            <p><%= resume.role %></p>
            <p style="font-size: 0.8rem;">Created: <%= new Date(resume.createdAt).toLocaleDateString() %></p>
            <div class="card-actions">
              <a href="/resume/<%= resume._id %>" target="_blank" class="btn-view">View</a>
              <a href="/resume/<%= resume._id %>/download" class="btn-download">Download PDF</a>
              <button class="btn-delete" onclick="deleteResume('<%= resume._id %>')">Delete</button>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="empty-state">
        <p>You haven't created any resumes yet. Let's get started!</p>
        <a href="/resume/create" class="btn btn-primary">Create Your First Resume</a>
      </div>
    <% } %>
  </div>

  <footer class="footer">
    <p>&copy; 2025 Smart Resume Builder. All rights reserved.</p>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    async function deleteResume(id) {
      const result = await Swal.fire({
        title: "Are you sure?",
        text: "This action cannot be undone!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
      });

      if (result.isConfirmed) {
        try {
          await axios.delete(`/resume/${id}`);
          document.querySelector(`.resume-card[data-id='${id}']`).remove();
          Swal.fire("Deleted!", "Your resume has been deleted.", "success");
        } catch (err) {
          Swal.fire("Error!", "Failed to delete the resume.", "error");
        }
      }
    }
  </script>
</body>
</html>
